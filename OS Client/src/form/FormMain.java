/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import communication.CommunicationC;
import constants.Operation;
import domain.Club;
import domain.Employee;
import form.club.model.TableModelClub;
import form.club.PanelClub;
import form.player.PanelPlayer;
import form.club.PanelSearchClub;
import form.player.PanelSearchPlayer;
import form.tournament.PanelNewTournament;
import form.tournament.PanelTournaments;
import java.util.LinkedList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import logic.ControlerC;
import session.Session;
import thread.ClockThread;
import transfer.ClientRequest;

/**
 *
 * @author TANJA-PC
 */
public class FormMain extends javax.swing.JFrame {

    private PanelClub panelClub;
    private PanelSearchClub panelSearchClub;
    private TableModelClub modelClub;
    private PanelPlayer panelPlayer;
    private PanelSearchPlayer panelSearchPlayer;
    private PanelTournaments panelTournaments;
    private PanelNewTournament panelNewTournament;

    /**
     * Creates new form FormaGlavna
     */
    public FormMain() {
        initComponents();
        ControlerC.getInstance().setActiveWindow(this);
        startClock();
        setModelC();
        requestClubsForTable();
        adjustTableClub();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGlavnaForma = new javax.swing.JLabel();
        employeePanel = new javax.swing.JPanel();
        lblEmployee = new javax.swing.JLabel();
        lblClock = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClubs = new javax.swing.JTable();
        lblRegisteredCLubs = new javax.swing.JLabel();
        MenuMain = new javax.swing.JMenuBar();
        jmClub = new javax.swing.JMenu();
        jmiAddNewClub = new javax.swing.JMenuItem();
        jmiSearchClubs = new javax.swing.JMenuItem();
        jmPlayer = new javax.swing.JMenu();
        jmiAddNewPlayer = new javax.swing.JMenuItem();
        jmiSearchPlayers = new javax.swing.JMenuItem();
        jmTournament = new javax.swing.JMenu();
        jmiTournaments = new javax.swing.JMenuItem();
        jmEmployee = new javax.swing.JMenu();
        jmiLogout = new javax.swing.JMenuItem();
        jmSettings = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblGlavnaForma.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblGlavnaForma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGlavnaForma.setText("glavna forma");

        employeePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblEmployee.setText("Službenik");

        lblClock.setText("sat");

        javax.swing.GroupLayout employeePanelLayout = new javax.swing.GroupLayout(employeePanel);
        employeePanel.setLayout(employeePanelLayout);
        employeePanelLayout.setHorizontalGroup(
            employeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeePanelLayout.createSequentialGroup()
                .addComponent(lblEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE)
                .addComponent(lblClock, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        employeePanelLayout.setVerticalGroup(
            employeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeePanelLayout.createSequentialGroup()
                .addGroup(employeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployee)
                    .addComponent(lblClock))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        tblClubs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClubs);

        lblRegisteredCLubs.setText("Registrovani klubovi");

        jmClub.setText("Klub");

        jmiAddNewClub.setText("Registruj klub");
        jmiAddNewClub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddNewClubActionPerformed(evt);
            }
        });
        jmClub.add(jmiAddNewClub);

        jmiSearchClubs.setText("Pretraga klubova");
        jmiSearchClubs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSearchClubsActionPerformed(evt);
            }
        });
        jmClub.add(jmiSearchClubs);

        MenuMain.add(jmClub);

        jmPlayer.setText("Igrač");

        jmiAddNewPlayer.setText("Registruj igrača");
        jmiAddNewPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAddNewPlayerActionPerformed(evt);
            }
        });
        jmPlayer.add(jmiAddNewPlayer);

        jmiSearchPlayers.setText("Pretraga igrača");
        jmiSearchPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSearchPlayersActionPerformed(evt);
            }
        });
        jmPlayer.add(jmiSearchPlayers);

        MenuMain.add(jmPlayer);

        jmTournament.setText("Turnir");

        jmiTournaments.setText("Pregled turnira");
        jmiTournaments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTournamentsActionPerformed(evt);
            }
        });
        jmTournament.add(jmiTournaments);

        MenuMain.add(jmTournament);

        jmEmployee.setText("Službenik");

        jmiLogout.setText("Odjavi me");
        jmiLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLogoutActionPerformed(evt);
            }
        });
        jmEmployee.add(jmiLogout);

        MenuMain.add(jmEmployee);

        jmSettings.setText("Podešavanja");
        MenuMain.add(jmSettings);

        setJMenuBar(MenuMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRegisteredCLubs)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(employeePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblGlavnaForma)
                        .addGap(266, 266, 266))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(lblRegisteredCLubs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblGlavnaForma)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiAddNewClubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddNewClubActionPerformed
        JDialog dialog = new JDialog(this, "Registrovanje novog kluba", true);
        ControlerC.getInstance().setActiveWindow(dialog);

        panelClub = new PanelClub(FormMode.NEW, dialog);
        dialog.add(panelClub);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_jmiAddNewClubActionPerformed

    private void jmiLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLogoutActionPerformed
        requestLogout();
    }//GEN-LAST:event_jmiLogoutActionPerformed

    private void jmiSearchClubsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSearchClubsActionPerformed
        JDialog dialog = new JDialog(this, "Pretraga klubova", true);
        ControlerC.getInstance().setActiveWindow(dialog);

        panelSearchClub = new PanelSearchClub(dialog);
        dialog.add(panelSearchClub);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_jmiSearchClubsActionPerformed

    private void jmiAddNewPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAddNewPlayerActionPerformed
        JDialog dialog = new JDialog(this, "Registrovanje novog igrača", true);
        ControlerC.getInstance().setActiveWindow(dialog);

        panelPlayer = new PanelPlayer(FormMode.NEW, dialog);
        dialog.add(panelPlayer);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_jmiAddNewPlayerActionPerformed

    private void jmiSearchPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSearchPlayersActionPerformed
        JDialog dialog = new JDialog(this, "Pretraga igrača", true);
        ControlerC.getInstance().setActiveWindow(dialog);

        panelSearchPlayer = new PanelSearchPlayer(dialog);
        dialog.add(panelSearchPlayer);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_jmiSearchPlayersActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        requestLogout();
    }//GEN-LAST:event_formWindowClosing

    private void jmiTournamentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTournamentsActionPerformed
        JDialog dialog = new JDialog(this, "Pregled turnira", true);
        ControlerC.getInstance().setActiveWindow(dialog);

        panelTournaments = new PanelTournaments(dialog);
        dialog.add(panelTournaments);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_jmiTournamentsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuMain;
    private javax.swing.JPanel employeePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jmClub;
    private javax.swing.JMenu jmEmployee;
    private javax.swing.JMenu jmPlayer;
    private javax.swing.JMenu jmSettings;
    private javax.swing.JMenu jmTournament;
    private javax.swing.JMenuItem jmiAddNewClub;
    private javax.swing.JMenuItem jmiAddNewPlayer;
    private javax.swing.JMenuItem jmiLogout;
    private javax.swing.JMenuItem jmiSearchClubs;
    private javax.swing.JMenuItem jmiSearchPlayers;
    private javax.swing.JMenuItem jmiTournaments;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblEmployee;
    private javax.swing.JLabel lblGlavnaForma;
    private javax.swing.JLabel lblRegisteredCLubs;
    private javax.swing.JTable tblClubs;
    // End of variables declaration//GEN-END:variables

    private void startClock() {
        ClockThread ct = new ClockThread(lblClock);
        ct.start();
    }

    public PanelClub getPanelClub() {
        return panelClub;
    }

    public PanelSearchClub getPanelSearchClub() {
        return panelSearchClub;
    }

    public void setPanelClub(PanelClub panelClub) {
        this.panelClub = panelClub;
    }

    public void setPanelSearchClub(PanelSearchClub panelSearchClub) {
        this.panelSearchClub = panelSearchClub;
    }

    public PanelPlayer getPanelPlayer() {
        return panelPlayer;
    }

    public void setPanelPlayer(PanelPlayer panelPlayer) {
        this.panelPlayer = panelPlayer;
    }

    public PanelSearchPlayer getPanelSearchPlayer() {
        return panelSearchPlayer;
    }

    public void setPanelSearchPlayer(PanelSearchPlayer panelSearchPlayer) {
        this.panelSearchPlayer = panelSearchPlayer;
    }

    public PanelNewTournament getPanelNewTournament() {
        return panelNewTournament;
    }

    public void setPanelNewTournament(PanelNewTournament panelNewTournament) {
        this.panelNewTournament = panelNewTournament;
    }

    public PanelTournaments getPanelTournaments() {
        return panelTournaments;
    }

    public void setPanelTournaments(PanelTournaments panelTournaments) {
        this.panelTournaments = panelTournaments;
    }
    
    public TableModelClub getModelClub() {
        return modelClub;
    }

    public void setModelClub(TableModelClub modelClub) {
        this.modelClub = modelClub;
        tblClubs.setModel(modelClub);
    }

    public void logout(boolean successful) {
        String message;
        if (successful) {     //true ako je klijent trazio
            message = "Uspesno ste se odjavili!";
        } else {              //false ako je server iskljucen
            message = "Veza sa serverom je prekinuta!";
        }
        JOptionPane.showMessageDialog(this, message);
    }
    
    private void requestLogout(){
        ClientRequest cr = new ClientRequest();
        Employee e = Session.getInstance().getLoggedEmployee();
        cr.setParameter(e);
        cr.setOperation(Operation.LOGOUT);
        CommunicationC.getInstance().sendRequest(cr);
    }

    public void setEmployeeName(Employee employee) {
        lblEmployee.setText(employee.getName());
    }

    public void requestClubsForTable() {
        ClientRequest cr = new ClientRequest();
        Session.getInstance().getUseCaseParams().put("request club", "FormMain");
        cr.setOperation(Operation.GET_ALL_CLUBS);
        CommunicationC.getInstance().sendRequest(cr);
    }


    private void setModelC() {
        LinkedList<Club> clubs = new LinkedList<>();
        TableModelClub tmc = new TableModelClub(clubs);
        modelClub = tmc;
        tblClubs.setModel(modelClub);
    }

    private void adjustTableClub() {
        TableColumn column = null;
        for (int i = 0; i < modelClub.getColumnCount(); i++) {
            column = tblClubs.getColumnModel().getColumn(i);
            switch(i){
                case 0:
                    column.setPreferredWidth(37);
                    break;
                case 1:
                    column.setPreferredWidth(100);
                    break;
                case 2:
                    column.setPreferredWidth(60);
                    break;
                case 3:
                    column.setPreferredWidth(130);
                    break;
                case 4:
                    column.setPreferredWidth(85);
                    break;
                case 5:
                    //column.setPreferredWidth(85);
                    break;
            }
        }
    }
}
